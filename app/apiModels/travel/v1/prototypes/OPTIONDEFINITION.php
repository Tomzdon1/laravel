<?php
/**
 * OPTIONDEFINITION
 *
 * PHP version 5
 *
 * @category Class
 * @package  App\apiModels\travel\v1
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace App\apiModels\travel\v1\prototypes;

use \ArrayAccess;
/**
 * OPTIONDEFINITION Class Doc Comment
 *
 * @category    Class
 * @description Definicja atrybutu
 * @package     App\apiModels\travel\v1
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OPTIONDEFINITION implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'name' => 'string',
        'description' => 'string',
        'code' => 'string',
        'value_type' => 'string',
        'changeable' => 'bool',
        'sub_options' => 'App\apiModels\travel\v1\prototypes\OPTIONDEFINITION[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'name' => 'name',
        'description' => 'description',
        'code' => 'code',
        'value_type' => 'value_type',
        'changeable' => 'changeable',
        'sub_options' => 'sub_options'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'name' => 'setName',
        'description' => 'setDescription',
        'code' => 'setCode',
        'value_type' => 'setValueType',
        'changeable' => 'setChangeable',
        'sub_options' => 'setSubOptions'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'name' => 'getName',
        'description' => 'getDescription',
        'code' => 'getCode',
        'value_type' => 'getValueType',
        'changeable' => 'getChangeable',
        'sub_options' => 'getSubOptions'
    );
  
    
    /**
      * $name Nazwa atrybutu
      * @var string
      */
    protected $name;
    
    /**
      * $description Opis atrybutu
      * @var string
      */
    protected $description;
    
    /**
      * $code Kod atrybutu
      * @var string
      */
    protected $code;
    
    /**
      * $value_type Oczekiwany typ danych wartości atrybutu
      * @var string
      */
    protected $value_type;
    
    /**
      * $changeable Czy jest możliwa zmiana wartości tego atrybutu
      * @var bool
      */
    protected $changeable;
    
    /**
      * $sub_options Tablica definicji atrybutów
      * @var App\apiModels\travel\v1\prototypes\OPTIONDEFINITION[]
      */
    protected $sub_options;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->name = $data["name"];
            $this->description = $data["description"];
            $this->code = $data["code"];
            $this->value_type = $data["value_type"];
            $this->changeable = $data["changeable"];
            $this->sub_options = $data["sub_options"];
        }
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name Nazwa atrybutu
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
  
    /**
     * Sets description
     * @param string $description Opis atrybutu
     * @return $this
     */
    public function setDescription($description)
    {
        
        $this->description = $description;
        return $this;
    }
    
    /**
     * Gets code
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }
  
    /**
     * Sets code
     * @param string $code Kod atrybutu
     * @return $this
     */
    public function setCode($code)
    {
        
        $this->code = $code;
        return $this;
    }
    
    /**
     * Gets value_type
     * @return string
     */
    public function getValueType()
    {
        return $this->value_type;
    }
  
    /**
     * Sets value_type
     * @param string $value_type Oczekiwany typ danych wartości atrybutu
     * @return $this
     */
    public function setValueType($value_type)
    {
        $allowed_values = array("string", "number", "date", "boolean");
        if (!in_array($value_type, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'value_type', must be one of 'string', 'number', 'date', 'boolean'");
        }
        $this->value_type = $value_type;
        return $this;
    }
    
    /**
     * Gets changeable
     * @return bool
     */
    public function getChangeable()
    {
        return $this->changeable;
    }
  
    /**
     * Sets changeable
     * @param bool $changeable Czy jest możliwa zmiana wartości tego atrybutu
     * @return $this
     */
    public function setChangeable($changeable)
    {
        
        $this->changeable = $changeable;
        return $this;
    }
    
    /**
     * Gets sub_options
     * @return App\apiModels\travel\v1\prototypes\OPTIONDEFINITION[]
     */
    public function getSubOptions()
    {
        return $this->sub_options;
    }
  
    /**
     * Sets sub_options
     * @param App\apiModels\travel\v1\prototypes\OPTIONDEFINITION[] $sub_options Tablica definicji atrybutów
     * @return $this
     */
    public function setSubOptions($sub_options)
    {
        
        $this->sub_options = $sub_options;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
