<?php
/**
 * IMPORTREQUEST
 *
 * PHP version 5
 *
 * @category Class
 * @package  App\apiModels\travel\v1
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace App\apiModels\travel\v1\prototypes ;

use \ArrayAccess;
/**
 * IMPORTREQUEST Class Doc Comment
 *
 * @category    Class
 * @description Zestaw danych do zapisania gotowej polisy
 * @package     App\apiModels\travel\v1
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class IMPORTREQUEST extends \App\apiModels\ApiModel implements ArrayAccess 
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'product_ref' => 'string',
        'data' => 'App\apiModels\travel\v1\prototypes\POLICYDATA',
        'policy_date' => '\DateTime',
        'policy_number' => 'string',
        'policy_holder' => 'App\apiModels\travel\v1\prototypes\POLICYHOLDER',
        'insured' => 'App\apiModels\travel\v1\prototypes\INSURED[]',
        'amount' => 'App\apiModels\travel\v1\prototypes\AMOUNT',
        'tariff_amount' => 'App\apiModels\travel\v1\prototypes\AMOUNT',
        'promo_code' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'product_ref' => 'product_ref',
        'data' => 'data',
        'policy_date' => 'policy_date',
        'policy_number' => 'policy_number',
        'policy_holder' => 'policy_holder',
        'insured' => 'insured',
        'amount' => 'amount',
        'tariff_amount' => 'tariff_amount',
        'promo_code' => 'promo_code'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'product_ref' => 'setProductRef',
        'data' => 'setData',
        'policy_date' => 'setPolicyDate',
        'policy_number' => 'setPolicyNumber',
        'policy_holder' => 'setPolicyHolder',
        'insured' => 'setInsured',
        'amount' => 'setAmount',
        'tariff_amount' => 'setTariffAmount',
        'promo_code' => 'setPromoCode'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'product_ref' => 'getProductRef',
        'data' => 'getData',
        'policy_date' => 'getPolicyDate',
        'policy_number' => 'getPolicyNumber',
        'policy_holder' => 'getPolicyHolder',
        'insured' => 'getInsured',
        'amount' => 'getAmount',
        'tariff_amount' => 'getTariffAmount',
        'promo_code' => 'getPromoCode'
    );
  
    
    /**
      * $product_ref Identyfikator produktu
      * @var string
      */
    protected $product_ref;
    
    /**
      * $data Dane polisy
      * @var App\apiModels\travel\v1\prototypes\POLICYDATA
      */
    protected $data;
    
    /**
      * $policy_date Data zawarcia polisy
      * @var \DateTime
      */
    protected $policy_date;
    
    /**
      * $policy_number Numer polisy
      * @var string
      */
    protected $policy_number;
    
    /**
      * $policy_holder Dane ubezpieczającego
      * @var App\apiModels\travel\v1\prototypes\POLICYHOLDER
      */
    protected $policy_holder;
    
    /**
      * $insured Dane ubezpieczonych
      * @var App\apiModels\travel\v1\prototypes\INSURED[]
      */
    protected $insured;
    
    /**
      * $amount Obiekt z informacją o składce pobranej
      * @var App\apiModels\travel\v1\prototypes\AMOUNT
      */
    protected $amount;
    
    /**
      * $tariff_amount Obiekt z informacją o składce wynikającej z taryfy
      * @var App\apiModels\travel\v1\prototypes\AMOUNT
      */
    protected $tariff_amount;
    
    /**
      * $promo_code Kod promocyjny
      * @var string
      */
    protected $promo_code;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->product_ref = $data["product_ref"];
            $this->data = $data["data"];
            $this->policy_date = $data["policy_date"];
            $this->policy_number = $data["policy_number"];
            $this->policy_holder = $data["policy_holder"];
            $this->insured = $data["insured"];
            $this->amount = $data["amount"];
            $this->tariff_amount = $data["tariff_amount"];
            $this->promo_code = $data["promo_code"];
        }
    }
    
    /**
     * Gets product_ref
     * @return string
     */
    public function getProductRef()
    {
        return $this->product_ref;
    }
  
    /**
     * Sets product_ref
     * @param string $product_ref Identyfikator produktu
     * @return $this
     */
    public function setProductRef($product_ref)
    {
        
        $this->product_ref = $product_ref;
        return $this;
    }
    
    /**
     * Gets data
     * @return App\apiModels\travel\v1\prototypes\POLICYDATA
     */
    public function getData()
    {
        return $this->data;
    }
  
    /**
     * Sets data
     * @param App\apiModels\travel\v1\prototypes\POLICYDATA $data Dane polisy
     * @return $this
     */
    public function setData($data)
    {
        
        $this->data = $data;
        return $this;
    }
    
    /**
     * Gets policy_date
     * @return \DateTime
     */
    public function getPolicyDate()
    {
        return $this->policy_date;
    }
  
    /**
     * Sets policy_date
     * @param \DateTime $policy_date Data zawarcia polisy
     * @return $this
     */
    public function setPolicyDate($policy_date)
    {
        
        $this->policy_date = $policy_date;
        return $this;
    }
    
    /**
     * Gets policy_number
     * @return string
     */
    public function getPolicyNumber()
    {
        return $this->policy_number;
    }
  
    /**
     * Sets policy_number
     * @param string $policy_number Numer polisy
     * @return $this
     */
    public function setPolicyNumber($policy_number)
    {
        
        $this->policy_number = $policy_number;
        return $this;
    }
    
    /**
     * Gets policy_holder
     * @return App\apiModels\travel\v1\prototypes\POLICYHOLDER
     */
    public function getPolicyHolder()
    {
        return $this->policy_holder;
    }
  
    /**
     * Sets policy_holder
     * @param App\apiModels\travel\v1\prototypes\POLICYHOLDER $policy_holder Dane ubezpieczającego
     * @return $this
     */
    public function setPolicyHolder($policy_holder)
    {
        
        $this->policy_holder = $policy_holder;
        return $this;
    }
    
    /**
     * Gets insured
     * @return App\apiModels\travel\v1\prototypes\INSURED[]
     */
    public function getInsured()
    {
        return $this->insured;
    }
  
    /**
     * Sets insured
     * @param App\apiModels\travel\v1\prototypes\INSURED[] $insured Dane ubezpieczonych
     * @return $this
     */
    public function setInsured($insured)
    {
        
        $this->insured = $insured;
        return $this;
    }
    
    /**
     * Gets amount
     * @return App\apiModels\travel\v1\prototypes\AMOUNT
     */
    public function getAmount()
    {
        return $this->amount;
    }
  
    /**
     * Sets amount
     * @param App\apiModels\travel\v1\prototypes\AMOUNT $amount Obiekt z informacją o składce pobranej
     * @return $this
     */
    public function setAmount($amount)
    {
        
        $this->amount = $amount;
        return $this;
    }
    
    /**
     * Gets tariff_amount
     * @return App\apiModels\travel\v1\prototypes\AMOUNT
     */
    public function getTariffAmount()
    {
        return $this->tariff_amount;
    }
  
    /**
     * Sets tariff_amount
     * @param App\apiModels\travel\v1\prototypes\AMOUNT $tariff_amount Obiekt z informacją o składce wynikającej z taryfy
     * @return $this
     */
    public function setTariffAmount($tariff_amount)
    {
        
        $this->tariff_amount = $tariff_amount;
        return $this;
    }
    
    /**
     * Gets promo_code
     * @return string
     */
    public function getPromoCode()
    {
        return $this->promo_code;
    }
  
    /**
     * Sets promo_code
     * @param string $promo_code Kod promocyjny
     * @return $this
     */
    public function setPromoCode($promo_code)
    {
        
        $this->promo_code = $promo_code;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
